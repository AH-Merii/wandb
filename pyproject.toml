[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wandb"
dynamic = ["version"]
description = "A CLI and library for interacting with the Weights and Biases API."
readme = "README.md"
license = "MIT license"
requires-python = ">=3.6"
authors = [
    { name = "Weights & Biases", email = "support@wandb.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Logging",
    "Topic :: System :: Monitoring",
]
dependencies = [
    "appdirs>=1.4.3",
    "Click>=7.0,!=8.0.0  # click 8.0.0 is broken",
    "dataclasses; python_version < '3.7'",
    "docker-pycreds>=0.4.0",
    "GitPython>=1.0.0,!=3.1.29  # CVE-2022-24439",
    "pathtools # supports vendored version of watchdog 0.9.0",
    "protobuf>=3.12.0,!=4.21.0,<5; python_version < '3.9' and sys_platform == 'linux'",
    "protobuf>=3.15.0,!=4.21.0,<5; python_version == '3.9' and sys_platform == 'linux'",
    "protobuf>=3.19.0,!=4.21.0,<5; python_version > '3.9' and sys_platform == 'linux'",
    "protobuf>=3.19.0,!=4.21.0,<5; sys_platform != 'linux'",
    "psutil>=5.0.0",
    "PyYAML",
    "requests>=2.0.0,<3",
    "sentry-sdk>=1.0.0",
    "setproctitle",
    "setuptools",
    "typing_extensions; python_version < '3.10'",
]

[project.optional-dependencies]
aws = [
    "boto3",
]
azure = [
    "azure-storage-blob",
]
gcp = [
    "google-cloud-storage",
]
grpc = [
    "grpcio>=1.27.2",
]
kubeflow = [
    "google-cloud-storage",
    "kubernetes",
    "minio",
    "sh",
]
launch = [
    "awscli",
    "boto3",
    "botocore",
    "chardet",
    "google-auth",
    "google-cloud-artifact-registry",
    "google-cloud-compute",
    "google-cloud-storage",
    "iso8601",
    "kubernetes",
    "nbconvert",
    "nbformat",
    "typing_extensions",
]
media = [
    "bokeh",
    "moviepy",
    "numpy",
    "pillow",
    "plotly",
    "rdkit-pypi",
    "soundfile",
]
models = [
    "cloudpickle",
]
service = []
sweeps = [
    "sweeps>=0.2.0",
]

[project.scripts]
wandb = "wandb.cli.cli:cli"
wb = "wandb.cli.cli:cli"

[project.urls]
Homepage = "https://github.com/wandb/wandb"

[tool.hatch.version]
path = "wandb/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/wandb",
]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
wandb/vendor/
| wandb/bin/
| wandb/proto/
| wandb/proto_check/
| wandb/sdk/launch/deploys/
| wandb/run*
| wandb/offline-run*
| __pycache__
| .pyc
| .tox/
'''

[tool.isort]
profile = "black"
skip = ["wandb/__init__.py"]
extend_skip_glob = ["wandb/vendor/**", "wandb/proto/**"]
skip_gitignore = "True"


[tool.commitizen]
name = "cz_conventional_commits"
major_version_zero = true
version = "0.13.12.dev1"
version_files = ["setup.py", "setup.cfg", "wandb/__init__.py"]
tag_format = "v$major.$minor.$patch$prerelease"
changelog_incremental = true
#post_bump_hooks = [
#  "tools/cz_version_to_dev.sh",
#]

[tool.commitizen.change_type_map]
"feat" = ":sparkles: Enhancements"
"fix" = ":hammer: Fixes"
"refactor" = ":nail_care: Cleanup"
"perf" = ":rocket: Performance"
security = ":lock: Security"


[tool.ruff]
select = ["F", "E", "W", "B", "I", "N", "D", "C90", "UP"]
ignore = [
    "B904",
    "E501",
    "D1",  # Allow missing docstrings.
    "D417",  # Don't require descriptions for all arguments.
    "UP022",  # Only valid for Python 3.7+
    "UP036",  # Only valid for Python 3.7+
]
exclude = [
    "tests/functional_tests/t0_main/fastai/t1_v1.py",
    "tests/functional_tests/t0_main/metaflow",
    "tests/pytest_tests/assets/fixtures/train.py",
    "tests/pytest_tests/unit_tests_old",
    "wandb/__init__.py",
    "wandb/bin",
    "wandb/data",
    "wandb/env.py",
    "wandb/errors",
    "wandb/integration/keras/keras.py",
    "wandb/integration/magic.py",
    "wandb/integration/metaflow",
    "wandb/keras",
    "wandb/offline-run-*",
    "wandb/old",
    "wandb/plots",
    "wandb/proto_check",
    "wandb/proto",
    "wandb/run-*",
    "wandb/sklearn",
    "wandb/superagent",
    "wandb/vendor",
    "wandb/viz.py",
    "wandb/wandb_torch.py",
]
target-version = "py37"

[tool.ruff.isort]
split-on-trailing-comma = false

[tool.ruff.per-file-ignores]
"wandb/cli/cli.py" = ["C901"]
"wandb/wandb_controller.py" = ["N803", "N806"]
"wandb/filesync/step_checksum.py" = ["B023"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.mccabe]
max-complexity = 18
