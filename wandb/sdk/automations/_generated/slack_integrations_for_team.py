# Generated by ariadne-codegen
# Source: wandb/sdk/automations/queries.graphql

from typing import Annotated, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import SlackIntegration


class SlackIntegrationsForTeam(BaseModel):
    entity: Optional["SlackIntegrationsForTeamEntity"]


class SlackIntegrationsForTeamEntity(BaseModel):
    integrations: Optional["SlackIntegrationsForTeamEntityIntegrations"]


class SlackIntegrationsForTeamEntityIntegrations(BaseModel):
    edges: List["SlackIntegrationsForTeamEntityIntegrationsEdges"]


class SlackIntegrationsForTeamEntityIntegrationsEdges(BaseModel):
    node: Optional[
        Annotated[
            Union[
                "SlackIntegrationsForTeamEntityIntegrationsEdgesNodeIntegration",
                "SlackIntegrationsForTeamEntityIntegrationsEdgesNodeSlackIntegration",
            ],
            Field(discriminator="typename__"),
        ]
    ]


class SlackIntegrationsForTeamEntityIntegrationsEdgesNodeIntegration(BaseModel):
    typename__: Literal[
        "GenericWebhookIntegration", "GitHubOAuthIntegration", "Integration"
    ] = Field(alias="__typename")


class SlackIntegrationsForTeamEntityIntegrationsEdgesNodeSlackIntegration(
    SlackIntegration
):
    typename__: Literal["SlackIntegration"] = Field(alias="__typename")


SlackIntegrationsForTeam.model_rebuild()
SlackIntegrationsForTeamEntity.model_rebuild()
SlackIntegrationsForTeamEntityIntegrations.model_rebuild()
SlackIntegrationsForTeamEntityIntegrationsEdges.model_rebuild()
