# Generated by ariadne-codegen
# Source: wandb/sdk/automations/queries.graphql

from typing import Annotated, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import SlackIntegration


class SlackIntegrationsForUser(BaseModel):
    viewer: Optional["SlackIntegrationsForUserViewer"]


class SlackIntegrationsForUserViewer(BaseModel):
    user_entity: Optional["SlackIntegrationsForUserViewerUserEntity"] = Field(
        alias="userEntity"
    )


class SlackIntegrationsForUserViewerUserEntity(BaseModel):
    integrations: Optional["SlackIntegrationsForUserViewerUserEntityIntegrations"]


class SlackIntegrationsForUserViewerUserEntityIntegrations(BaseModel):
    edges: List["SlackIntegrationsForUserViewerUserEntityIntegrationsEdges"]


class SlackIntegrationsForUserViewerUserEntityIntegrationsEdges(BaseModel):
    node: Optional[
        Annotated[
            Union[
                "SlackIntegrationsForUserViewerUserEntityIntegrationsEdgesNodeIntegration",
                "SlackIntegrationsForUserViewerUserEntityIntegrationsEdgesNodeSlackIntegration",
            ],
            Field(discriminator="typename__"),
        ]
    ]


class SlackIntegrationsForUserViewerUserEntityIntegrationsEdgesNodeIntegration(
    BaseModel
):
    typename__: Literal[
        "GenericWebhookIntegration", "GitHubOAuthIntegration", "Integration"
    ] = Field(alias="__typename")


class SlackIntegrationsForUserViewerUserEntityIntegrationsEdgesNodeSlackIntegration(
    SlackIntegration
):
    typename__: Literal["SlackIntegration"] = Field(alias="__typename")


SlackIntegrationsForUser.model_rebuild()
SlackIntegrationsForUserViewer.model_rebuild()
SlackIntegrationsForUserViewerUserEntity.model_rebuild()
SlackIntegrationsForUserViewerUserEntityIntegrations.model_rebuild()
SlackIntegrationsForUserViewerUserEntityIntegrationsEdges.model_rebuild()
