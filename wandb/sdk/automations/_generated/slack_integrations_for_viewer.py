# Generated by ariadne-codegen
# Source: wandb/sdk/automations/queries.graphql

from typing import Annotated, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import SlackIntegration


class SlackIntegrationsForViewer(BaseModel):
    viewer: Optional["SlackIntegrationsForViewerViewer"]


class SlackIntegrationsForViewerViewer(BaseModel):
    user_entity: Optional["SlackIntegrationsForViewerViewerUserEntity"] = Field(
        alias="userEntity"
    )


class SlackIntegrationsForViewerViewerUserEntity(BaseModel):
    integrations: Optional["SlackIntegrationsForViewerViewerUserEntityIntegrations"]


class SlackIntegrationsForViewerViewerUserEntityIntegrations(BaseModel):
    edges: List["SlackIntegrationsForViewerViewerUserEntityIntegrationsEdges"]


class SlackIntegrationsForViewerViewerUserEntityIntegrationsEdges(BaseModel):
    node: Optional[
        Annotated[
            Union[
                "SlackIntegrationsForViewerViewerUserEntityIntegrationsEdgesNodeIntegration",
                "SlackIntegrationsForViewerViewerUserEntityIntegrationsEdgesNodeSlackIntegration",
            ],
            Field(discriminator="typename__"),
        ]
    ]


class SlackIntegrationsForViewerViewerUserEntityIntegrationsEdgesNodeIntegration(
    BaseModel
):
    typename__: Literal[
        "GenericWebhookIntegration", "GitHubOAuthIntegration", "Integration"
    ] = Field(alias="__typename")


class SlackIntegrationsForViewerViewerUserEntityIntegrationsEdgesNodeSlackIntegration(
    SlackIntegration
):
    typename__: Literal["SlackIntegration"] = Field(alias="__typename")


SlackIntegrationsForViewer.model_rebuild()
SlackIntegrationsForViewerViewer.model_rebuild()
SlackIntegrationsForViewerViewerUserEntity.model_rebuild()
SlackIntegrationsForViewerViewerUserEntityIntegrations.model_rebuild()
SlackIntegrationsForViewerViewerUserEntityIntegrationsEdges.model_rebuild()
