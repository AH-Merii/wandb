fragment SlackIntegration on SlackIntegration {
    __typename
    id
    teamName
    channelName
}
fragment WebhookIntegration on GenericWebhookIntegration {
    __typename
    id
    name
    urlEndpoint
    secretRef
    accessTokenRef
    createdAt
}
fragment GithubIntegration on GitHubOAuthIntegration {
    __typename
    id
}

# ------------------------------------------------------------------------------
fragment ArtifactSequenceScope on ArtifactSequence {
    __typename
    id
    name
}
fragment ArtifactPortfolioScope on ArtifactPortfolio {
    __typename
    id
    name
}
fragment ProjectScope on Project {
    __typename
    id
    name
}

# ------------------------------------------------------------------------------
fragment FilterEventTriggeringCondition on FilterEventTriggeringCondition {
    __typename
    eventType
    filter
}

# ------------------------------------------------------------------------------
fragment RunQueue on RunQueue {
    id
    name
}
fragment QueueJobAction on QueueJobTriggeredAction {
    __typename
    template
    queue {... RunQueue}
}
fragment NotificationAction on NotificationTriggeredAction {
    __typename
    title
    message
    severity
    integration {... SlackIntegration}
}
fragment WebhookAction on GenericWebhookTriggeredAction {
    __typename
    requestPayload
    integration {... WebhookIntegration}
}

# ------------------------------------------------------------------------------
fragment UserInfo on User {
    id
    username
}

fragment Trigger on Trigger {
    __typename
    id
    createdAt
    createdBy {... UserInfo}
    updatedAt
    name
    description
    enabled
    scope {
        ... ProjectScope
        ... ArtifactPortfolioScope
        ... ArtifactSequenceScope
    }
    triggeringCondition {
        ... FilterEventTriggeringCondition
    }
    triggeredAction {
        ... QueueJobAction
        ... NotificationAction
        ... WebhookAction
    }
}

# ------------------------------------------------------------------------------
query TriggersInUserOrgs ($entityName: String) {
    viewer(entityName: $entityName) {
        organizations {
            orgEntity {
                projects {
                    edges {
                        node {
                            triggers {... Trigger}
                        }
                    }
                }
            }
            teams {
                projects {
                    edges {
                        node {
                            triggers {... Trigger}
                        }
                    }
                }
            }
        }
    }
}

# ------------------------------------------------------------------------------
fragment CreateFilterTriggerResult on CreateFilterTriggerPayload {
    __typename
    trigger {... Trigger}
    clientMutationId
}

mutation CreateTrigger($params: CreateFilterTriggerInput!) {
    createFilterTrigger(input: $params) {
        ... CreateFilterTriggerResult
    }
}

# ------------------------------------------------------------------------------
fragment DeleteTriggerResult on DeleteTriggerPayload {
    __typename
    success
    clientMutationId
}

mutation DeleteTrigger($id: ID!) {
    deleteTrigger(input: {triggerID: $id}) {
        ... DeleteTriggerResult
    }
}

# ------------------------------------------------------------------------------
query SlackIntegrationsForUser {
    viewer {
        userEntity {
            integrations {
                edges {
                    node {... SlackIntegration}
                }
            }
        }
    }
}

# ------------------------------------------------------------------------------
query SlackIntegrationsForTeam($entityName: String!) {
    entity(name: $entityName) {
        integrations {
            edges {
                node {... SlackIntegration}
            }
        }
    }
}
