[version]
path = "wandb/__init__.py"

[build.targets.sdist]
include = [
    "/wandb",
]

[envs.dev]
dependencies = [
    "bokeh",
    "boto3",
    "cloudpickle",
    "coverage",
    "docker",
    "fastcore; python_version > '3.6'",
    "fastcore==1.3.29; python_version == '3.6'",
    "git+https://github.com/bastibe/python-soundfile@0.11.0b3#egg=soundfile; sys_platform == 'darwin' and platform.machine == 'arm64'",
    "google-cloud-aiplatform",
    "google-cloud-storage",
    "hypothesis",
    "imageio",
    "ipykernel",
    "ipython",
    "jax[cpu]; sys_platform == 'darwin' or sys_platform == 'linux'",
    "kfp",
    "kubernetes",
    "lightgbm",
    "matplotlib!=3.5.2",
    "metaflow>=2.3.5",
    "moviepy",
    "nbclient",
    "pandas",
    "Pillow",
    "plotly",
    "prometheus_client",
    "pyarrow",
    "pytest",
    "rdkit-pypi; python_version > '3.7' and sys_platform == 'darwin' and platform.machine == 'arm64'",
    "rdkit-pypi; sys_platform != 'darwin' or (sys_platform == 'darwin' and platform.machine != 'arm64')",
    "responses",
    "scikit-learn",
    "soundfile; sys_platform != 'darwin' or (sys_platform == 'darwin' and platform.machine != 'arm64')",
    "tensorboard",
    "tensorflow-macos; python_version > '3.6' and python_version < '3.10' and sys_platform == 'darwin' and platform.machine == 'arm64'",
    "tensorflow>=1.15.2; python_version > '3.6' and sys_platform == 'darwin' and platform.machine != 'arm64'",
    "tensorflow>=1.15.2; sys_platform != 'darwin'",
    "torch",
    "torchvision",
    "tqdm",
    "xgboost",
]

[envs.test]
dependencies = [
    "parameterized",
    "pytest-cov",
    "pytest-flakefinder",
    "pytest-flask",
    "pytest-mock",
    "pytest-openfiles",
    "pytest-rerunfailures",
    "pytest-split",
    "pytest-timeout",
    "pytest-xdist",
    "pytest",
]

[[envs.test.matrix]]
python = ["3.6", "3.7", "3.8", "3.9", "3.10"]

[envs.unitshard]
template = "test"
extra-dependencies = [  # TODO: remove after conftest.py refactor.
    "bokeh",
    "nbclient",
    "matplotlib<3.5.2",
]

[envs.unitshard_nb]
template = "unitshard"
extra-dependencies = [  # TODO: remove after conftest.py refactor.
    "ipython",
    "ipykernel",
    "nbclient",
]

[[envs.unitshard_nb.matrix]]
python = ["3.6", "3.7", "3.8", "3.9", "3.10"]

[envs.empty]
detached = true  # Doesn't need package installation.

[envs.build]
template = "empty"
dependencies = [
    "bumpversion",
    "grpcio-tools>=1.46.3",
    "grpcio>=1.46.3",
    "libcst",
    "twine",
]

[envs.launch]
template = "dev"
extra-dependencies = [
    "awscli",
    "boto3",
    "botocore",
    "chardet",
    "google-cloud-artifact-registry",
    "google-cloud-compute",
    "google-cloud-storage",
    "iso8601",
    "kubernetes",
    "nbconvert",
    "nbformat",
    "typing_extensions",
]
